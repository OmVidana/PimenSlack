{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Downloads\\\\Pimenton p3\\\\tcp-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// TcpClientComponent.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TcpClientComponent = () => {\n  _s();\n  const [serverResponse, setServerResponse] = useState('');\n  const ws = new WebSocket('ws://localhost:3001');\n  ws.onopen = () => {\n    console.log('Connected to Node.js server');\n  };\n  ws.onmessage = event => {\n    console.log('Received data from Node.js server:', event.data);\n    setServerResponse(event.data);\n  };\n  ws.onclose = () => {\n    console.log('Connection closed');\n  };\n  const sendMessage = message => {\n    console.log('Sending message to Node.js server:', message);\n    ws.send(message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage('Hello from React client'),\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Server Response: \", serverResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TcpClientComponent, \"0z6Q+x9XfslhP6JEDyIjDNyqRAA=\");\n_c = TcpClientComponent;\nexport default TcpClientComponent;\nvar _c;\n$RefreshReg$(_c, \"TcpClientComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TcpClientComponent","_s","serverResponse","setServerResponse","ws","WebSocket","onopen","console","log","onmessage","event","data","onclose","sendMessage","message","send","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Downloads/Pimenton p3/tcp-client/src/App.js"],"sourcesContent":["// TcpClientComponent.js\nimport React, { useState } from 'react';\n\nconst TcpClientComponent = () => {\n  const [serverResponse, setServerResponse] = useState('');\n  const ws = new WebSocket('ws://localhost:3001');\n\n  ws.onopen = () => {\n    console.log('Connected to Node.js server');\n  };\n\n  ws.onmessage = (event) => {\n    console.log('Received data from Node.js server:', event.data);\n    setServerResponse(event.data);\n  };\n\n  ws.onclose = () => {\n    console.log('Connection closed');\n  };\n\n  const sendMessage = (message) => {\n    console.log('Sending message to Node.js server:', message);\n    ws.send(message);\n  };\n\n  return (\n    <div>\n      <button onClick={() => sendMessage('Hello from React client')}>Send Message</button>\n      <p>Server Response: {serverResponse}</p>\n    </div>\n  );\n};\n\nexport default TcpClientComponent;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMO,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;EAE/CD,EAAE,CAACE,MAAM,GAAG,MAAM;IAChBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C,CAAC;EAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;IACxBH,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEE,KAAK,CAACC,IAAI,CAAC;IAC7DR,iBAAiB,CAACO,KAAK,CAACC,IAAI,CAAC;EAC/B,CAAC;EAEDP,EAAE,CAACQ,OAAO,GAAG,MAAM;IACjBL,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC;EAED,MAAMK,WAAW,GAAIC,OAAO,IAAK;IAC/BP,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEM,OAAO,CAAC;IAC1DV,EAAE,CAACW,IAAI,CAACD,OAAO,CAAC;EAClB,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMJ,WAAW,CAAC,yBAAyB,CAAE;MAAAG,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpFtB,OAAA;MAAAiB,QAAA,GAAG,mBAAiB,EAACd,cAAc;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5BID,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AA8BxB,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}