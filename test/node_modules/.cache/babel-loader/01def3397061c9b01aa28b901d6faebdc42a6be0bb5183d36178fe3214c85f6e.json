{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Downloads\\\\Pimenton p3\\\\tcp-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// TcpClientComponent.js\nimport React, { useState } from 'react';\nimport net from 'net';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TcpClientComponent = () => {\n  _s();\n  const [serverResponse, setServerResponse] = useState('');\n  const [client, setClient] = useState(null);\n  const connectToServer = () => {\n    const socket = new net.Socket();\n    socket.connect({\n      port: 3001,\n      host: 'localhost'\n    }, () => {\n      console.log('Connected to Node.js server');\n      setClient(socket);\n    });\n    socket.on('data', data => {\n      console.log('Received data from Node.js server:', data.toString());\n      setServerResponse(data.toString());\n    });\n  };\n  const sendMessage = message => {\n    if (client) {\n      client.write(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectToServer,\n      children: \"Connect to Node.js Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage('Hello from React client'),\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Server Response: \", serverResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TcpClientComponent, \"Cbi6H3qqDrIZKaH0WrnRAtdFv58=\");\n_c = TcpClientComponent;\nexport default TcpClientComponent;\nvar _c;\n$RefreshReg$(_c, \"TcpClientComponent\");","map":{"version":3,"names":["React","useState","net","jsxDEV","_jsxDEV","TcpClientComponent","_s","serverResponse","setServerResponse","client","setClient","connectToServer","socket","Socket","connect","port","host","console","log","on","data","toString","sendMessage","message","write","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Downloads/Pimenton p3/tcp-client/src/App.js"],"sourcesContent":["// TcpClientComponent.js\nimport React, { useState } from 'react';\nimport net from 'net';\n\nconst TcpClientComponent = () => {\n  const [serverResponse, setServerResponse] = useState('');\n  const [client, setClient] = useState(null);\n\n  const connectToServer = () => {\n    const socket = new net.Socket();\n    socket.connect({ port: 3001, host: 'localhost' }, () => {\n      console.log('Connected to Node.js server');\n      setClient(socket);\n    });\n\n    socket.on('data', (data) => {\n      console.log('Received data from Node.js server:', data.toString());\n      setServerResponse(data.toString());\n    });\n  };\n\n  const sendMessage = (message) => {\n    if (client) {\n      client.write(message);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={connectToServer}>Connect to Node.js Server</button>\n      <button onClick={() => sendMessage('Hello from React client')}>Send Message</button>\n      <p>Server Response: {serverResponse}</p>\n    </div>\n  );\n};\n\nexport default TcpClientComponent;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,MAAM,GAAG,IAAIV,GAAG,CAACW,MAAM,CAAC,CAAC;IAC/BD,MAAM,CAACE,OAAO,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAY,CAAC,EAAE,MAAM;MACtDC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CR,SAAS,CAACE,MAAM,CAAC;IACnB,CAAC,CAAC;IAEFA,MAAM,CAACO,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;MAC1BH,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MAClEb,iBAAiB,CAACY,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAId,MAAM,EAAE;MACVA,MAAM,CAACe,KAAK,CAACD,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,OAAO,EAAEf,eAAgB;MAAAc,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpE1B,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMJ,WAAW,CAAC,yBAAyB,CAAE;MAAAG,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpF1B,OAAA;MAAAqB,QAAA,GAAG,mBAAiB,EAAClB,cAAc;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9BID,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAgCxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}