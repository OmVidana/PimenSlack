{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Downloads\\\\Pimenton p3\\\\tcp-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//TcpClientComponent.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TcpClientComponent = () => {\n  _s();\n  const [serverResponse, setServerResponse] = useState('');\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:3001');\n    socket.onopen = () => {\n      console.log('Connected to Node.js server');\n      setWs(socket);\n    };\n    socket.onmessage = event => {\n      console.log('Received data from Node.js server:', event.data);\n      setServerResponse(event.data);\n    };\n    socket.onclose = () => {\n      console.log('Connection closed');\n      setWs(null);\n    };\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n  const sendMessage = message => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      console.log('Sending message to Node.js server:', message);\n      ws.send(message);\n    } else {\n      console.error('WebSocket connection not open');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage('Hello from React client'),\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Server Response: \", serverResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TcpClientComponent, \"paPw6VrvpweftK18UKWyzMeL7IQ=\");\n_c = TcpClientComponent;\nexport default TcpClientComponent;\nvar _c;\n$RefreshReg$(_c, \"TcpClientComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TcpClientComponent","_s","serverResponse","setServerResponse","ws","setWs","socket","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","sendMessage","message","readyState","OPEN","send","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Downloads/Pimenton p3/tcp-client/src/App.js"],"sourcesContent":["//TcpClientComponent.js\nimport React, { useState, useEffect } from 'react';\n\nconst TcpClientComponent = () => {\n  const [serverResponse, setServerResponse] = useState('');\n  const [ws, setWs] = useState(null);\n\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:3001');\n\n    socket.onopen = () => {\n      console.log('Connected to Node.js server');\n      setWs(socket);\n    };\n\n    socket.onmessage = (event) => {\n      console.log('Received data from Node.js server:', event.data);\n      setServerResponse(event.data);\n    };\n\n    socket.onclose = () => {\n      console.log('Connection closed');\n      setWs(null);\n    };\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n\n  const sendMessage = (message) => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      console.log('Sending message to Node.js server:', message);\n      ws.send(message);\n    } else {\n      console.error('WebSocket connection not open');\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => sendMessage('Hello from React client')}>Send Message</button>\n      <p>Server Response: {serverResponse}</p>\n    </div>\n  );\n};\n\nexport default TcpClientComponent;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElCC,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CL,KAAK,CAACC,MAAM,CAAC;IACf,CAAC;IAEDA,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5BH,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEE,KAAK,CAACC,IAAI,CAAC;MAC7DV,iBAAiB,CAACS,KAAK,CAACC,IAAI,CAAC;IAC/B,CAAC;IAEDP,MAAM,CAACQ,OAAO,GAAG,MAAM;MACrBL,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCL,KAAK,CAAC,IAAI,CAAC;IACb,CAAC;IAED,OAAO,MAAM;MACX,IAAID,EAAE,EAAE;QACNA,EAAE,CAACW,KAAK,CAAC,CAAC;MACZ;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAIb,EAAE,IAAIA,EAAE,CAACc,UAAU,KAAKX,SAAS,CAACY,IAAI,EAAE;MAC1CV,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEO,OAAO,CAAC;MAC1Db,EAAE,CAACgB,IAAI,CAACH,OAAO,CAAC;IAClB,CAAC,MAAM;MACLR,OAAO,CAACY,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAAC,yBAAyB,CAAE;MAAAM,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpF5B,OAAA;MAAAuB,QAAA,GAAG,mBAAiB,EAACpB,cAAc;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5CID,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AA8CxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}